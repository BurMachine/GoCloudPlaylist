// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/add_song": {
            "post": {
                "description": "Adds a new song to the playlist with the given name and duration (duration format 00:01:30)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Playlist"
                ],
                "summary": "Add a new song to the playlist",
                "parameters": [
                    {
                        "description": "Song object to add to the playlist",
                        "name": "song",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httpHandlers.Song"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all songs in the playlist",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Song"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/delete_song": {
            "get": {
                "description": "Deletes the song with the given name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Playlist"
                ],
                "summary": "Delete song from playlist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Song's name to delete",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all songs in the playlist",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Song"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/next_song": {
            "get": {
                "description": "Switch to the next song if it exists",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Playlist"
                ],
                "summary": "Switch to next song",
                "responses": {
                    "200": {
                        "description": "Playback status",
                        "schema": {
                            "$ref": "#/definitions/httpHandlers.ProcessingResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/pause": {
            "get": {
                "description": "Pause track playback",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Playlist"
                ],
                "summary": "Pause playback",
                "responses": {
                    "200": {
                        "description": "Playback status",
                        "schema": {
                            "$ref": "#/definitions/httpHandlers.ProcessingResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/play": {
            "get": {
                "description": "Unpauses track playback",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Playlist"
                ],
                "summary": "Start playback",
                "responses": {
                    "200": {
                        "description": "Playback status",
                        "schema": {
                            "$ref": "#/definitions/httpHandlers.ProcessingResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/prev_song": {
            "get": {
                "description": "Switch to the previous song if it exists",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Playlist"
                ],
                "summary": "Switch to previous song",
                "responses": {
                    "200": {
                        "description": "Playback status",
                        "schema": {
                            "$ref": "#/definitions/httpHandlers.ProcessingResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/status": {
            "get": {
                "description": "Switch to the previous song if it exists",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Playlist"
                ],
                "summary": "Playback status",
                "responses": {
                    "200": {
                        "description": "Playback status",
                        "schema": {
                            "$ref": "#/definitions/httpHandlers.ProcessingResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "httpHandlers.ProcessingResponse": {
            "type": "object",
            "properties": {
                "playback_status": {
                    "type": "string"
                },
                "song_duration": {
                    "type": "string"
                },
                "song_name": {
                    "type": "string"
                }
            }
        },
        "httpHandlers.Song": {
            "type": "object",
            "properties": {
                "song_duration": {
                    "type": "string"
                },
                "song_name": {
                    "type": "string"
                }
            }
        },
        "models.Song": {
            "type": "object",
            "properties": {
                "duration": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "GoCloudPlaylist API",
	Description:      "API Server for GoCloudPlaylist Application",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
